{"version":3,"sources":["Contactbook.jsx","App.js","index.js"],"names":["Contactbook","useState","vision","setVision","display","setDisplay","name","phone","email","contact","setContact","ContactData","e","ipValue","target","value","ipname","preval","contVal","localStorage","getItem","JSON","parse","getItemsBack","items","setItems","useEffect","setItem","stringify","srchValue","setSearchValue","srchitem","setSrchItem","togglebtn","setTogglebtn","editid","setEditid","className","type","placeholder","onChange","filteredValue","filter","ele","index","firstColumn","toUpperCase","rows","includes","length","onKeyDown","onSubmit","event","preventDefault","alert","map","indx","autoComplete","style","textTransform","visibility","width","height","eleVal","key","backgroundColor","color","border","onClick","id","editableItems","find","element","editContact","olditems","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e52df16.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./index.css\";\r\n\r\n\r\n\r\nconst getItemsBack = () =>\r\n{\r\n    let contVal = localStorage.getItem(\"contactDetails\");\r\n    if (contVal) {\r\n        return JSON.parse(contVal);\r\n    } else {\r\n        return [];\r\n    }\r\n};\r\n\r\n\r\n\r\nconst Contactbook = () =>\r\n{\r\n\r\n\r\n    const [vision, setVision] = useState(\"hidden\");\r\n    const [display, setDisplay] = useState(\"hidden\");\r\n\r\n\r\n    const [contact, setContact] = useState({\r\n        name: \"\",\r\n        phone: \"\",\r\n        email: \"\"\r\n    });\r\n\r\n    \r\n\r\n    const ContactData = (e) =>\r\n    {\r\n        const ipValue = e.target.value;\r\n        const ipname = e.target.name;\r\n\r\n        setContact((preval) =>\r\n        {\r\n            return {\r\n                ...preval,\r\n                [ipname]: ipValue,\r\n            };\r\n        });\r\n    };\r\n\r\n\r\n\r\n    const [items, setItems] = useState(getItemsBack());\r\n    \r\n\r\n    const addContact = (event) =>\r\n    {\r\n        event.preventDefault();\r\n\r\n        setItems((preval) =>\r\n        {\r\n\r\n            if (contact.name === \"\" || contact.phone === \"\" || contact.email === \"\") {\r\n\r\n                alert(\"please enter name, phone no. & email properly\");\r\n\r\n                return [...preval];\r\n\r\n            } else if (togglebtn === \"Save\") {\r\n                \r\n                return (items.map((ele, indx) =>\r\n                {\r\n                    if (indx === editid) {\r\n\r\n                        return contact;\r\n\r\n                    } else {\r\n\r\n                        return ele;\r\n                    }\r\n                }));\r\n                \r\n            } else {\r\n                return [...preval, contact];\r\n                \r\n            }\r\n\r\n           \r\n        });\r\n\r\n\r\n        setContact({\r\n            name: \"\",\r\n            phone: \"\",\r\n            email: \"\"\r\n        });\r\n        setTogglebtn(\"Add\");\r\n        setDisplay(\"visible\");\r\n\r\n        \r\n    }\r\n\r\n\r\n\r\n    useEffect(() =>\r\n    {\r\n        localStorage.setItem(\"contactDetails\", JSON.stringify(items));\r\n    }, [items]);\r\n\r\n   \r\n\r\n\r\n    const [srchValue, setSearchValue] = useState(\"\");\r\n    const [srchitem, setSrchItem] = useState([]);\r\n    \r\n\r\n    const searchItems = (e) =>\r\n    {\r\n        setSearchValue(e.target.value);\r\n    \r\n\r\n        const filteredValue = items.filter((ele, index) =>\r\n        {\r\n            const firstColumn = ele.name.toUpperCase();\r\n            const rows = srchValue.toUpperCase();\r\n            return firstColumn.includes(rows);\r\n        });\r\n        \r\n        \r\n        \r\n        if (srchValue.length > -1) {\r\n            setSrchItem(filteredValue);\r\n            setVision(\"visible\");\r\n            setDisplay(\"hidden\");\r\n            \r\n        };\r\n        \r\n        \r\n        \r\n    };\r\n\r\n\r\n\r\n    const showOrginalTable = () =>\r\n    {\r\n     \r\n            if (!srchValue) {\r\n                setDisplay(\"visible\");\r\n                setVision(\"hidden\");\r\n            }\r\n    }\r\n\r\n       \r\n\r\n    const deleteContact = (id) =>\r\n    {\r\n        setItems((olditems) =>\r\n        {\r\n            return olditems.filter((element, indx) =>\r\n            {\r\n                return indx !== id;\r\n            });\r\n        });\r\n\r\n    };\r\n\r\n    \r\n\r\n    const [togglebtn, setTogglebtn] = useState(\"Add\");\r\n    const [editid, setEditid] = useState();\r\n\r\n    \r\n    const editContact = (id) =>\r\n{\r\n        const editableItems = items.find((element, indx) =>\r\n        {\r\n            return indx === id;\r\n        });\r\n\r\n        setContact(editableItems);\r\n        setTogglebtn(\"Save\");\r\n        setEditid(id);\r\n}    \r\n   \r\n    \r\n\r\n    return (\r\n        <>\r\n            <div className=\"main_div\">\r\n            <div className=\"child_div\">\r\n                   <h1>Contacts</h1>\r\n                    <input type=\"search\" name=\"searchbox\" className=\"srch\" placeholder=\"search by names...\"\r\n                     onChange={searchItems} value={srchValue} onKeyDown={showOrginalTable}\r\n                   />\r\n                <div className=\"form_div\">\r\n                    <form onSubmit={addContact}>\r\n                        <label>Name:</label>\r\n                            <input type=\"text\" name=\"name\" autoComplete=\"off\" \r\n                         style={{textTransform: \"capitalize\"}} onChange={ContactData} value={contact.name} /><br />\r\n                        <label>Phone:</label>\r\n                            <input type=\"number\" name=\"phone\" autoComplete=\"off\" onChange={ContactData}\r\n                            value={contact.phone} /><br />\r\n                        <label>Email:</label>\r\n                            <input type=\"email\" name=\"email\" autoComplete=\"off\" onChange={ContactData}\r\n                            value={contact.email} /><br />\r\n                            <button> {togglebtn} </button>\r\n                    </form>\r\n                    </div>\r\n                    \r\n                    <div className=\"table_div\">\r\n                        \r\n                    <diV className=\"tdiv1\">\r\n                    <table style={{visibility: display}} >\r\n                        <tr>\r\n                            <th style={{ width: \"200px\", height:\"20px\"}} >Name</th>\r\n                            <th style={{width: \"100px\", height:\"20px\"}} >Phone</th>\r\n                            <th style={{ width: \"200px\", height: \"20px\" }}>Email</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                         \r\n                                {items.map((eleVal, index) =>\r\n                                {\r\n                                    return (\r\n                                        <tr key={index} >\r\n                                            <td style={{textTransform: \"capitalize\"}} > {eleVal.name} </td>\r\n                                            <td> {eleVal.phone} </td>\r\n                                            <td> {eleVal.email} </td>\r\n                                            <td>\r\n                                                <button style={{ backgroundColor: \"green\", color: \"white\", border: \"2px solid green\" }}\r\n                                                onClick={() => {editContact(index)} }  >Edit</button>\r\n                                                <button style={{ backgroundColor: \"red\", color: \"white\", border: \"2px solid red\" }}\r\n                                                 onClick={() => { deleteContact(index) }}> Delete </button>\r\n                                            </td>\r\n                                \r\n                                        </tr>\r\n                                    );\r\n                            })}\r\n                    \r\n                            </table>\r\n                        </diV>\r\n\r\n                    <diV className=\"tdiv2\">\r\n                    <table style={{visibility: vision}} >\r\n                    <tr>\r\n                            <th style={{ width: \"200px\", height: \"20px\" }}>Name</th>\r\n                            <th style={{width: \"100px\", height:\"20px\"}} >Phone</th>\r\n                            <th style={{ width: \"200px\", height: \"20px\" }}>Email</th>\r\n                        \r\n                        </tr>\r\n                         \r\n                                {srchitem.map((value, index) =>\r\n                                {\r\n                                    return (\r\n                                  \r\n                                        <tr>\r\n                                            <td style={{textTransform: \"capitalize\"}} > {value.name} </td>\r\n                                            <td> {value.phone} </td>\r\n                                            <td> {value.email} </td>\r\n                                           \r\n                                        </tr>\r\n                                    );\r\n                          })}\r\n                    \r\n                            </table>\r\n                        </diV>\r\n\r\n                </div>            \r\n            </div>\r\n        </div>\r\n\r\n        </>\r\n    )\r\n};\r\n\r\n\r\nexport default Contactbook;","import React from \"react\";\nimport Contactbook from \"./Contactbook\";\n\n\n\n\n\n\n\nconst App = () =>\n{\n  return(\n  <>\n    <Contactbook />\n  </>)\n};\n\n\nexport default App;","\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\n\n\n\nReactDOM.render(\n   <>\n     <App />\n   </>,\n   document.getElementById(\"root\")\n);"],"sourceRoot":""}